{"ast":null,"code":"/* eslint-disable max-len */\nimport { CREATE_BOOK, REMOVE_BOOK, LOAD_BOOKS } from '../actions/index';\nexport const randInt = (minim, maxim) => {\n  const min = Math.ceil(minim);\n  const max = Math.floor(maxim);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst bookReducer = (state = [], action) => {\n  switch (action.type) {\n    case LOAD_BOOKS:\n    case CREATE_BOOK:\n      return [...state, {\n        id: randInt(1, 1000),\n        title: action.book.title,\n        category: action.book.category\n      }];\n\n    case REMOVE_BOOK:\n      return state.filter(book => book.id !== action.book.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default bookReducer;","map":{"version":3,"sources":["/Users/sjcy-mac/Documents/Microverse/react/bookstore-api/client/src/reducers/books.js"],"names":["CREATE_BOOK","REMOVE_BOOK","LOAD_BOOKS","randInt","minim","maxim","min","Math","ceil","max","floor","random","bookReducer","state","action","type","id","title","book","category","filter"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,QAAqD,kBAArD;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvC,QAAMC,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAV,CAAZ;AACA,QAAMK,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAWL,KAAX,CAAZ;AACA,SAAOE,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,MAAiBF,GAAG,GAAGH,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD,CAJM;;AAMP,MAAMM,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,UAAL;AAEA,SAAKF,WAAL;AACE,aAAO,CACL,GAAGa,KADE,EACK;AAAEG,QAAAA,EAAE,EAAEb,OAAO,CAAC,CAAD,EAAI,IAAJ,CAAb;AAAwBc,QAAAA,KAAK,EAAEH,MAAM,CAACI,IAAP,CAAYD,KAA3C;AAAkDE,QAAAA,QAAQ,EAAEL,MAAM,CAACI,IAAP,CAAYC;AAAxE,OADL,CAAP;;AAGF,SAAKlB,WAAL;AACE,aAAOY,KAAK,CAACO,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYF,MAAM,CAACI,IAAP,CAAYF,EAA7C,CAAP;;AACF;AACE,aAAOH,KAAP;AAVJ;AAYD,CAbD;;AAeA,eAAeD,WAAf","sourcesContent":["/* eslint-disable max-len */\nimport { CREATE_BOOK, REMOVE_BOOK, LOAD_BOOKS } from '../actions/index';\n\nexport const randInt = (minim, maxim) => {\n  const min = Math.ceil(minim);\n  const max = Math.floor(maxim);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst bookReducer = (state = [], action) => {\n  switch (action.type) {\n    case LOAD_BOOKS:\n      \n    case CREATE_BOOK:\n      return [\n        ...state, { id: randInt(1, 1000), title: action.book.title, category: action.book.category },\n      ];\n    case REMOVE_BOOK:\n      return state.filter(book => book.id !== action.book.id);\n    default:\n      return state;\n  }\n};\n\nexport default bookReducer;"]},"metadata":{},"sourceType":"module"}