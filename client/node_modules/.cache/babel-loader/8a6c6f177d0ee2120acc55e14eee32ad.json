{"ast":null,"code":"var _jsxFileName = \"/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/containers/BooksList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook } from '../actions/index';\nimport CategoryFilter from '../components/CategoryFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BooksList = ({\n  books,\n  filter,\n  delete: handleRemoveBook\n}) => {\n  const changeCategory = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CategoryFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Book ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), books.map(book => /*#__PURE__*/_jsxDEV(Book, {\n        book: book,\n        delete: handleRemoveBook\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 28\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = BooksList;\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired\n  })).isRequired,\n  delete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"sources":["/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/containers/BooksList.js"],"names":["React","PropTypes","connect","Book","removeBook","CategoryFilter","BooksList","books","filter","delete","handleRemoveBook","changeCategory","map","book","id","propTypes","arrayOf","shape","number","isRequired","title","string","category","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,MAAM,EAAEC;AAAzB,CAAD,KAAiD;AACjE,QAAMC,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAYGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,MAAM,EAAEH;AAAxC,SAAWG,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAlB,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAmBD,CAxBD;;KAAMR,S;AA0BNA,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,KAAK,EAAEN,SAAS,CAACe,OAAV,CACLf,SAAS,CAACgB,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEb,SAAS,CAACiB,MAAV,CAAiBC,UADP;AAEdC,IAAAA,KAAK,EAAEnB,SAAS,CAACoB,MAAV,CAAiBF,UAFV;AAGdG,IAAAA,QAAQ,EAAErB,SAAS,CAACoB,MAAV,CAAiBF;AAHb,GAAhB,CADK,EAMLA,UAPkB;AAQpBV,EAAAA,MAAM,EAAER,SAAS,CAACsB,IAAV,CAAeJ,UARH;AASpBX,EAAAA,MAAM,EAAEP,SAAS,CAACoB,MAAV,CAAiBF;AATL,CAAtB;;AAYA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAAElB,EAAAA,KAAK,EAAEkB,KAAK,CAAClB,KAAf;AAAsBC,EAAAA,MAAM,EAAEiB,KAAK,CAACjB;AAApC,CAAL,CAA7B;;AAEA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,MAAM,EAAEI,IAAI,IAAIc,QAAQ,CAACvB,UAAU,CAACS,IAAD,CAAX;AADc,CAAL,CAAnC;;AAIA,eAAeX,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook } from '../actions/index';\nimport CategoryFilter from '../components/CategoryFilter';\n\nconst BooksList = ({ books, filter, delete: handleRemoveBook }) => {\n  const changeCategory = () => {\n    \n  }\n\n  return (\n    <>\n      <CategoryFilter />\n      <table>\n        <tr>\n          <th>\n            Book ID\n          </th>\n          <th>\n            Title\n          </th>\n          <th>\n            Category\n          </th>\n        </tr>\n        {books.map(book => <Book key={book.id} book={book} delete={handleRemoveBook} />)}\n      </table>\n    </>\n  );\n};\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  delete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({ books: state.books, filter: state.filter });\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}