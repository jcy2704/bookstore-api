{"ast":null,"code":"var _jsxFileName = \"/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/containers/BooksList.js\";\n\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BooksList = ({\n  books,\n  filter,\n  changeCat,\n  delete: handleRemoveBook\n}) => {\n  const changeCategory = e => {\n    changeCat(e.target.value);\n  };\n\n  const filteredBooks = () => {\n    if (filter === 'All') {\n      return books.sort((a, b) => a.id - b.id);\n    }\n\n    return books.filter(book => book.category === filter).sort((a, b) => a.id - b.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Book ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredBooks().map(book => /*#__PURE__*/_jsxDEV(Book, {\n          book: book,\n          delete: handleRemoveBook\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = BooksList;\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired\n  })).isRequired,\n  delete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  changeCat: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book)),\n  changeCat: category => dispatch(changeFilter(category))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"sources":["/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/containers/BooksList.js"],"names":["React","PropTypes","connect","Book","removeBook","changeFilter","BooksList","books","filter","changeCat","delete","handleRemoveBook","changeCategory","e","target","value","filteredBooks","sort","a","b","id","book","category","map","propTypes","arrayOf","shape","number","isRequired","title","string","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions/index';\n\nconst BooksList = ({\n  books, filter, changeCat, delete: handleRemoveBook,\n}) => {\n  const changeCategory = e => {\n    changeCat(e.target.value);\n  };\n\n  const filteredBooks = () => {\n    if (filter === 'All') {\n      return books.sort((a, b) => a.id - b.id);\n    }\n    return books.filter(book => book.category === filter).sort((a, b) => a.id - b.id);\n  };\n\n  return (\n    <>\n      <table>\n        <thead>\n          <tr>\n            <th>\n              Book ID\n            </th>\n            <th>\n              Title\n            </th>\n            <th>\n              Category\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredBooks().map(book => <Book key={book.id} book={book} delete={handleRemoveBook} />)}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  delete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  changeCat: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({ books: state.books, filter: state.filter });\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book)),\n  changeCat: category => dispatch(changeFilter(category)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}