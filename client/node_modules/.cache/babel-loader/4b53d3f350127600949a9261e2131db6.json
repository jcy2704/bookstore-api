{"ast":null,"code":"var _jsxFileName = \"/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst randomInt = (minim, maxim) => {\n  const min = Math.ceil(minim);\n  const max = Math.floor(maxim);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst initialState = [{\n  id: randomInt(1, 100),\n  title: 'Book1',\n  category: 'Horror'\n}, {\n  id: randomInt(1, 100),\n  title: 'Book2',\n  category: 'Action'\n}, {\n  id: randomInt(1, 100),\n  title: 'Book3',\n  category: 'Biography'\n}, {\n  id: randomInt(1, 100),\n  title: 'Book4',\n  category: 'History'\n}, {\n  id: randomInt(1, 100),\n  title: 'Book5',\n  category: 'Kids'\n}, {\n  id: randomInt(1, 100),\n  title: 'Book6',\n  category: 'Learning'\n}, {\n  id: randomInt(1, 100),\n  title: 'Book7',\n  category: 'Sci-Fi'\n}];\nconst store = createStore(reducer, {\n  books: initialState\n});\n\nconst wrappedApp = /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n\nReactDOM.render(wrappedApp, document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/index.js"],"names":["React","ReactDOM","Provider","createStore","reducer","App","reportWebVitals","randomInt","minim","maxim","min","Math","ceil","max","floor","random","initialState","id","title","category","store","books","wrappedApp","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClC,QAAMC,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAV,CAAZ;AACA,QAAMK,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAWL,KAAX,CAAZ;AACA,SAAOE,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,MAAiBF,GAAG,GAAGH,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD,CAJD;;AAMA,MAAMM,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAEV,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAf;AAAyBW,EAAAA,KAAK,EAAE,OAAhC;AAAyCC,EAAAA,QAAQ,EAAE;AAAnD,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAEV,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAf;AAAyBW,EAAAA,KAAK,EAAE,OAAhC;AAAyCC,EAAAA,QAAQ,EAAE;AAAnD,CAFmB,EAGnB;AAAEF,EAAAA,EAAE,EAAEV,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAf;AAAyBW,EAAAA,KAAK,EAAE,OAAhC;AAAyCC,EAAAA,QAAQ,EAAE;AAAnD,CAHmB,EAInB;AAAEF,EAAAA,EAAE,EAAEV,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAf;AAAyBW,EAAAA,KAAK,EAAE,OAAhC;AAAyCC,EAAAA,QAAQ,EAAE;AAAnD,CAJmB,EAKnB;AAAEF,EAAAA,EAAE,EAAEV,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAf;AAAyBW,EAAAA,KAAK,EAAE,OAAhC;AAAyCC,EAAAA,QAAQ,EAAE;AAAnD,CALmB,EAMnB;AAAEF,EAAAA,EAAE,EAAEV,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAf;AAAyBW,EAAAA,KAAK,EAAE,OAAhC;AAAyCC,EAAAA,QAAQ,EAAE;AAAnD,CANmB,EAOnB;AAAEF,EAAAA,EAAE,EAAEV,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAf;AAAyBW,EAAAA,KAAK,EAAE,OAAhC;AAAyCC,EAAAA,QAAQ,EAAE;AAAnD,CAPmB,CAArB;AAUA,MAAMC,KAAK,GAAGjB,WAAW,CAACC,OAAD,EAAU;AAAEiB,EAAAA,KAAK,EAAEL;AAAT,CAAV,CAAzB;;AAEA,MAAMM,UAAU,gBACd,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;AAMAnB,QAAQ,CAACsB,MAAT,CACED,UADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACAnB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst randomInt = (minim, maxim) => {\n  const min = Math.ceil(minim);\n  const max = Math.floor(maxim);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst initialState = [\n  { id: randomInt(1, 100), title: 'Book1', category: 'Horror' },\n  { id: randomInt(1, 100), title: 'Book2', category: 'Action' },\n  { id: randomInt(1, 100), title: 'Book3', category: 'Biography' },\n  { id: randomInt(1, 100), title: 'Book4', category: 'History' },\n  { id: randomInt(1, 100), title: 'Book5', category: 'Kids' },\n  { id: randomInt(1, 100), title: 'Book6', category: 'Learning' },\n  { id: randomInt(1, 100), title: 'Book7', category: 'Sci-Fi' },\n];\n\nconst store = createStore(reducer, { books: initialState });\n\nconst wrappedApp = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(\n  wrappedApp,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}