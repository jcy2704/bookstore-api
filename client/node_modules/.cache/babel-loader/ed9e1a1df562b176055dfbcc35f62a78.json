{"ast":null,"code":"var _jsxFileName = \"/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/containers/BooksList.js\";\n\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BooksList = ({\n  books,\n  filter,\n  delete: handleRemoveBook\n}) => {\n  const filteredBooks = () => {\n    if (filter === 'All') {\n      return books.sort((a, b) => a.id - b.id);\n    }\n\n    return books.filter(book => book.category === filter).sort((a, b) => a.id - b.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"books-cards-cont\",\n      children: filteredBooks().map(book => /*#__PURE__*/_jsxDEV(Book, {\n        book: book,\n        delete: handleRemoveBook\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = BooksList;\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired\n  })).isRequired,\n  delete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"sources":["/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/containers/BooksList.js"],"names":["React","PropTypes","connect","Book","removeBook","BooksList","books","filter","delete","handleRemoveBook","filteredBooks","sort","a","b","id","book","category","map","propTypes","arrayOf","shape","number","isRequired","title","string","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,KADiB;AACVC,EAAAA,MADU;AACFC,EAAAA,MAAM,EAAEC;AADN,CAAD,KAEZ;AACJ,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIH,MAAM,KAAK,KAAf,EAAsB;AACpB,aAAOD,KAAK,CAACK,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAA9B,CAAP;AACD;;AACD,WAAOR,KAAK,CAACC,MAAN,CAAaQ,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBT,MAAvC,EAA+CI,IAA/C,CAAoD,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAvE,CAAP;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBACGJ,aAAa,GAAGO,GAAhB,CAAoBF,IAAI,iBAAI,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,MAAM,EAAEN;AAAxC,SAAWM,IAAI,CAACD,EAAhB;AAAA;AAAA;AAAA;AAAA,cAA5B;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAnBD;;KAAMT,S;AAqBNA,SAAS,CAACa,SAAV,GAAsB;AACpBZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB,OAAV,CACLlB,SAAS,CAACmB,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UADP;AAEdC,IAAAA,KAAK,EAAEtB,SAAS,CAACuB,MAAV,CAAiBF,UAFV;AAGdN,IAAAA,QAAQ,EAAEf,SAAS,CAACuB,MAAV,CAAiBF;AAHb,GAAhB,CADK,EAMLA,UAPkB;AAQpBd,EAAAA,MAAM,EAAEP,SAAS,CAACwB,IAAV,CAAeH,UARH;AASpBf,EAAAA,MAAM,EAAEN,SAAS,CAACuB,MAAV,CAAiBF;AATL,CAAtB;;AAYA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAAErB,EAAAA,KAAK,EAAEqB,KAAK,CAACrB,KAAf;AAAsBC,EAAAA,MAAM,EAAEoB,KAAK,CAACpB;AAApC,CAAL,CAA7B;;AAEA,MAAMqB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,MAAM,EAAEO,IAAI,IAAIc,QAAQ,CAACzB,UAAU,CAACW,IAAD,CAAX;AADc,CAAL,CAAnC;;AAIA,eAAeb,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvB,SAA7C,CAAf","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook } from '../actions/index';\n\nconst BooksList = ({\n  books, filter, delete: handleRemoveBook,\n}) => {\n  const filteredBooks = () => {\n    if (filter === 'All') {\n      return books.sort((a, b) => a.id - b.id);\n    }\n    return books.filter(book => book.category === filter).sort((a, b) => a.id - b.id);\n  };\n\n  return (\n    <>\n      <ul className=\"books-cards-cont\">\n        {filteredBooks().map(book => <Book key={book.id} book={book} delete={handleRemoveBook} />)}\n      </ul>\n\n      <div />\n    </>\n  );\n};\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  delete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({ books: state.books, filter: state.filter });\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}