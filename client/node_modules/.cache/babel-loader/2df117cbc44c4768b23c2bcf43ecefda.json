{"ast":null,"code":"var _jsxFileName = \"/Users/sjcy-mac/Documents/Microverse/react/bookstore-api/client/src/containers/BooksList.js\";\n\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Book from '../components/Book';\nimport { loadBooks, removeBook } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BooksList = ({\n  books,\n  filter,\n  delete: handleRemoveBook\n}) => {\n  const getBooks = () => {\n    axios.get('/v1/books').then(response => load(response.data));\n  };\n\n  const filteredBooks = () => {\n    if (filter === 'All') {\n      return books.sort((a, b) => a.id - b.id);\n    }\n\n    return books.filter(book => book.category === filter).sort((a, b) => a.id - b.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"books-cards-cont\",\n      children: filteredBooks().map(book => /*#__PURE__*/_jsxDEV(Book, {\n        book: book,\n        delete: handleRemoveBook\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), getBooks(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = BooksList;\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired\n  })).isRequired,\n  delete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book)),\n  load: books => dispatch(loadBooks(books))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"sources":["/Users/sjcy-mac/Documents/Microverse/react/bookstore-api/client/src/containers/BooksList.js"],"names":["React","PropTypes","connect","axios","Book","loadBooks","removeBook","BooksList","books","filter","delete","handleRemoveBook","getBooks","get","then","response","load","data","filteredBooks","sort","a","b","id","book","category","map","propTypes","arrayOf","shape","number","isRequired","title","string","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,KADiB;AACVC,EAAAA,MADU;AACFC,EAAAA,MAAM,EAAEC;AADN,CAAD,KAEZ;AACJ,QAAMC,QAAQ,GAAG,MAAM;AACrBT,IAAAA,KAAK,CAACU,GAAN,CAAU,WAAV,EACGC,IADH,CACQC,QAAQ,IAAIC,IAAI,CAACD,QAAQ,CAACE,IAAV,CADxB;AAED,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIT,MAAM,KAAK,KAAf,EAAsB;AACpB,aAAOD,KAAK,CAACW,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAA9B,CAAP;AACD;;AACD,WAAOd,KAAK,CAACC,MAAN,CAAac,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBf,MAAvC,EAA+CU,IAA/C,CAAoD,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAvE,CAAP;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBACGJ,aAAa,GAAGO,GAAhB,CAAoBF,IAAI,iBAAI,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,MAAM,EAAEZ;AAAxC,SAAWY,IAAI,CAACD,EAAhB;AAAA;AAAA;AAAA;AAAA,cAA5B;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAIGV,QAAQ,EAJX,eAKE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAxBD;;KAAML,S;AA0BNA,SAAS,CAACmB,SAAV,GAAsB;AACpBlB,EAAAA,KAAK,EAAEP,SAAS,CAAC0B,OAAV,CACL1B,SAAS,CAAC2B,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAErB,SAAS,CAAC4B,MAAV,CAAiBC,UADP;AAEdC,IAAAA,KAAK,EAAE9B,SAAS,CAAC+B,MAAV,CAAiBF,UAFV;AAGdN,IAAAA,QAAQ,EAAEvB,SAAS,CAAC+B,MAAV,CAAiBF;AAHb,GAAhB,CADK,EAMLA,UAPkB;AAQpBpB,EAAAA,MAAM,EAAET,SAAS,CAACgC,IAAV,CAAeH,UARH;AASpBrB,EAAAA,MAAM,EAAER,SAAS,CAAC+B,MAAV,CAAiBF;AATL,CAAtB;;AAYA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAAE3B,EAAAA,KAAK,EAAE2B,KAAK,CAAC3B,KAAf;AAAsBC,EAAAA,MAAM,EAAE0B,KAAK,CAAC1B;AAApC,CAAL,CAA7B;;AAEA,MAAM2B,kBAAkB,GAAGC,QAAQ,KAAK;AACtC3B,EAAAA,MAAM,EAAEa,IAAI,IAAIc,QAAQ,CAAC/B,UAAU,CAACiB,IAAD,CAAX,CADc;AAEtCP,EAAAA,IAAI,EAAER,KAAK,IAAI6B,QAAQ,CAAChC,SAAS,CAACG,KAAD,CAAV;AAFe,CAAL,CAAnC;;AAKA,eAAeN,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7B,SAA7C,CAAf","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Book from '../components/Book';\nimport { loadBooks, removeBook } from '../actions/index';\n\nconst BooksList = ({\n  books, filter, delete: handleRemoveBook,\n}) => {\n  const getBooks = () => {\n    axios.get('/v1/books')\n      .then(response => load(response.data))\n  }\n\n  const filteredBooks = () => {\n    if (filter === 'All') {\n      return books.sort((a, b) => a.id - b.id);\n    }\n    return books.filter(book => book.category === filter).sort((a, b) => a.id - b.id);\n  };\n\n  return (\n    <>\n      <ul className=\"books-cards-cont\">\n        {filteredBooks().map(book => <Book key={book.id} book={book} delete={handleRemoveBook} />)}\n      </ul>\n      {getBooks()}\n      <div className=\"form-divider\" />\n    </>\n  );\n};\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  delete: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({ books: state.books, filter: state.filter });\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book)),\n  load: books => dispatch(loadBooks(books)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}