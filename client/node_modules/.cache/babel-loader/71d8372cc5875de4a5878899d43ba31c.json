{"ast":null,"code":"var _jsxFileName = \"/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/containers/BooksList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook } from '../actions/index';\nimport CategoryFilter from '../components/CategoryFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BooksList = ({\n  books,\n  delete: handleRemoveBook,\n  filter\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(CategoryFilter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Book ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), console.log(filter), books.map(book => /*#__PURE__*/_jsxDEV(Book, {\n      book: book,\n      delete: handleRemoveBook\n    }, book.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c = BooksList;\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired\n  })).isRequired,\n  delete: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList\");","map":{"version":3,"sources":["/Users/sjcy-mac/Documents/Microverse/react/bookstore/src/containers/BooksList.js"],"names":["React","PropTypes","connect","Book","removeBook","CategoryFilter","BooksList","books","delete","handleRemoveBook","filter","console","log","map","book","id","propTypes","arrayOf","shape","number","isRequired","title","string","category","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAM,EAAEC,gBAAjB;AAAmCC,EAAAA;AAAnC,CAAD,kBAChB;AAAA,0BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYGC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAZH,EAaGH,KAAK,CAACM,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAoB,MAAA,IAAI,EAAEA,IAA1B;AAAgC,MAAA,MAAM,EAAEL;AAAxC,OAAWK,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YAAlB,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA,gBADF;;KAAMT,S;AAqBNA,SAAS,CAACU,SAAV,GAAsB;AACpBT,EAAAA,KAAK,EAAEN,SAAS,CAACgB,OAAV,CACLhB,SAAS,CAACiB,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UADP;AAEdC,IAAAA,KAAK,EAAEpB,SAAS,CAACqB,MAAV,CAAiBF,UAFV;AAGdG,IAAAA,QAAQ,EAAEtB,SAAS,CAACqB,MAAV,CAAiBF;AAHb,GAAhB,CADK,EAMLA,UAPkB;AAQpBZ,EAAAA,MAAM,EAAEP,SAAS,CAACuB,IAAV,CAAeJ;AARH,CAAtB;;AAYA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAAEnB,EAAAA,KAAK,EAAEmB,KAAK,CAACnB,KAAf;AAAsBG,EAAAA,MAAM,EAAEgB,KAAK,CAAChB;AAApC,CAAL,CAA7B;;AAEA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,MAAM,EAAEM,IAAI,IAAIc,QAAQ,CAACxB,UAAU,CAACU,IAAD,CAAX;AADc,CAAL,CAAnC;;AAIA,eAAeZ,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook } from '../actions/index';\nimport CategoryFilter from '../components/CategoryFilter';\n\nconst BooksList = ({ books, delete: handleRemoveBook, filter }) => (\n  <>\n    <CategoryFilter />\n    <table>\n      <tr>\n        <th>\n          Book ID\n        </th>\n        <th>\n          Title\n        </th>\n        <th>\n          Category\n        </th>\n      </tr>\n      {console.log(filter)}\n      {books.map(book => <Book key={book.id} book={book} delete={handleRemoveBook} />)}\n    </table>\n  </>\n);\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  delete: PropTypes.func.isRequired,\n  \n};\n\nconst mapStateToProps = state => ({ books: state.books, filter: state.filter });\n\nconst mapDispatchToProps = dispatch => ({\n  delete: book => dispatch(removeBook(book)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}